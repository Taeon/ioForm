{
    "docs": [
        {
            "location": "/", 
            "text": "ioForm - simplified form handling for PHP and JavaScript\n\n\nWhy?\n\n\nI work with forms a lot. I don't like working with forms. So I built ioForm, to take away the pain.\n\n\nWhat does it do?\n\n\nThe PHP side of ioForm allows you to define a form's structure as an PHP object, and then use that definition object to spit out a perfect HTML form. With a very simple (yet flexible) template system, it's possible to wrap fields in standard markup, meaning that you don't need to update every row if you decide to change the structure of your form.\n\n\nThe JavaScript side of ioForm aims to simplify interactions with forms on the client. So for example, getting and setting values for all field types uses the same GetValue/SetValue method. In addition, ioForm returns values in a more useful form that native Javascript -- date fields return a Date object, number fields return a number, multiple selects return an array.\n\n\nIs that all?\n\n\nYes and no. When combined with ioValidate, ioForm will handle server- and client- side validation of form data. So you can define a set of validation rules once, and have them instantly work in PHP and JavaScript.", 
            "title": "Home"
        }, 
        {
            "location": "/#ioform-simplified-form-handling-for-php-and-javascript", 
            "text": "", 
            "title": "ioForm - simplified form handling for PHP and JavaScript"
        }, 
        {
            "location": "/#why", 
            "text": "I work with forms a lot. I don't like working with forms. So I built ioForm, to take away the pain.", 
            "title": "Why?"
        }, 
        {
            "location": "/#what-does-it-do", 
            "text": "The PHP side of ioForm allows you to define a form's structure as an PHP object, and then use that definition object to spit out a perfect HTML form. With a very simple (yet flexible) template system, it's possible to wrap fields in standard markup, meaning that you don't need to update every row if you decide to change the structure of your form.  The JavaScript side of ioForm aims to simplify interactions with forms on the client. So for example, getting and setting values for all field types uses the same GetValue/SetValue method. In addition, ioForm returns values in a more useful form that native Javascript -- date fields return a Date object, number fields return a number, multiple selects return an array.", 
            "title": "What does it do?"
        }, 
        {
            "location": "/#is-that-all", 
            "text": "Yes and no. When combined with ioValidate, ioForm will handle server- and client- side validation of form data. So you can define a set of validation rules once, and have them instantly work in PHP and JavaScript.", 
            "title": "Is that all?"
        }, 
        {
            "location": "/requirements-installation/", 
            "text": "Requirements\n\n\nioForm has no non-standard dependencies on either the PHP or JavaScript side. It does, however, require PHP \n= 5.4. HTML5 form elements (e.g. date, number etc.) aren't supported by some older browsers such as IE9, so if that's a concern then you might need to look into finding a suitable polyfill.\n\n\nInstalling ioForm...\n\n\n...using composer\n\n\nSimple enough, just use:\n\n\ncomposer require taeon/ioform\n\n\n\n...from source\n\n\nAlternatively, you can \ndownload the source code as a compressed file\n. \n\n\nLoading ioForm\n\n\nPHP\n\n\nIf you're using composer, you don't need to do anything. If you're installing from source, it's still very easy: ioForm conforms to the \nPSR-4 standard\n, so once you've included the autoloader file (autoload.php) somewhere in your PHP, it takes care of loading its dependencies itself.\n\n\nJavaScript\n\n\nFor now there's no compressed version, so you'll need to include the uncompressed source:\n\n\nscript src=\"[path-to-ioform]/src/js/ioForm.js\"\n/script\n\n\n\n\nSee the Pen \npEdgrJ\n by Taeon (\n@Taeon\n) on \nCodePen\n.", 
            "title": "Requirements and installation"
        }, 
        {
            "location": "/requirements-installation/#requirements", 
            "text": "ioForm has no non-standard dependencies on either the PHP or JavaScript side. It does, however, require PHP  = 5.4. HTML5 form elements (e.g. date, number etc.) aren't supported by some older browsers such as IE9, so if that's a concern then you might need to look into finding a suitable polyfill.", 
            "title": "Requirements"
        }, 
        {
            "location": "/requirements-installation/#installing-ioform", 
            "text": "", 
            "title": "Installing ioForm..."
        }, 
        {
            "location": "/requirements-installation/#using-composer", 
            "text": "Simple enough, just use:  composer require taeon/ioform", 
            "title": "...using composer"
        }, 
        {
            "location": "/requirements-installation/#from-source", 
            "text": "Alternatively, you can  download the source code as a compressed file .", 
            "title": "...from source"
        }, 
        {
            "location": "/requirements-installation/#loading-ioform", 
            "text": "", 
            "title": "Loading ioForm"
        }, 
        {
            "location": "/requirements-installation/#php", 
            "text": "If you're using composer, you don't need to do anything. If you're installing from source, it's still very easy: ioForm conforms to the  PSR-4 standard , so once you've included the autoloader file (autoload.php) somewhere in your PHP, it takes care of loading its dependencies itself.", 
            "title": "PHP"
        }, 
        {
            "location": "/requirements-installation/#javascript", 
            "text": "For now there's no compressed version, so you'll need to include the uncompressed source:  script src=\"[path-to-ioform]/src/js/ioForm.js\" /script   See the Pen  pEdgrJ  by Taeon ( @Taeon ) on  CodePen .", 
            "title": "JavaScript"
        }
    ]
}